
Stemdl classification benchmark
-------------------------------

Description
-----------
For running the stemdl benchmark these files are required:
stemdl_light.py - source of the benchmark
stemdlConfig.yaml - configuration file
The sequence of steps perforof stemdl benchmark can be described by these steps
1. read the configuration file ("stemdlConfig.yaml")
2. read the datasets for training, validation, testing, inference
3. train the network
4. perform inferencing
5. measure the time of trainig per epoch and time of a single inference operation
6. save the measurements on the log_file.

Installation
-------------
If Anaconda is not installed on the system, it can be downloaded from the distribution site.

Installation
------------
It is recommended to run the Stemdl benchmark in the Anaconda environment.
For the installation use these sequence of instructions:

1) If Anaconda is not already installed on the system, it can be downloaded from
 here:
    wget https://repo.anaconda.com/archive/Anaconda3-2021.05-Linux-x86_64.sh

2)Install Anaconda
    bash Anaconda3-2021.05-Linux-x86_64.sh

3) Create conda environment
      conda create --name bench python=3.8

4) conda activate bench

5) pip install pytorch-lightning

6) pip install torchvision
7) pip install scikit-learn
?pip install mlcommonLogs

9) Running the benchmark
    python sytemdl_light.py --config stemdlConfig.yaml


Datasets
---------
The stemdl bechmark uses these datasets: training (138717 files), validation (20000 files),testing (20000 files), prediction (8438 files), 197kbytes each. The datasets can be downloaded from remote server by using this command:
aws s3 --no-sign-request --endpoint-url https://s3.echo.stfc.ac.uk sync s3://sciml-datasets/ms/stemdl_ds1 ./

The tartgt directory in this case is the local one "./", but any other directory can be provided where write permision is allowed. As a result of this command four directories will be created: training (26G), testing (3.8G), validation (3.8G), inference (1.6G).



Measurements
------------
*** Quadro GV100, GPU=1 ***
Stemdl training, samples=138717, resnet=resnet18, epochs=20, bs=32, nodes=1, gpu=1, training_per_epoch=124.18
Stemdl inference, inferences=8438, bs=32, nodes=1, gpu=1, time_per_inference=0.000346

*** Quadro GV100, GPU=2 ***
Stemdl training, samples=138717, resnet=resnet18, epochs=20, bs=32, nodes=1, gpu=2, training_per_epoch=82.35
Stemdl training, samples=138717, resnet=resnet18, epochs=20, bs=32, nodes=1, gpu=2, training_per_epoch=82.46

Stemdl inference, inferences=8438, bs=32, nodes=1, gpu=2, time_per_inference=0.000227
Stemdl inference, inferences=8438, bs=32, nodes=1, gpu=2, time_per_inference=0.000251


Notes
------
1) Print the accuracy/loss for epoch.
2) Use resnet50, resnet101.
3) Printout only on one GPU.
